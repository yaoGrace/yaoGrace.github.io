name: Deploy  # 工作流程的名称：部署
on:  # 触发工作流程的事件
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:  # 当有代码推送到仓库时触发
    branches:  # 触发事件的具体分支
      - master  # 当代码推送到 main/master 分支时触发此工作流程

jobs:  # 定义工作流程中的作业
  deploy:  # 作业的ID：部署
    runs-on: ubuntu-latest  # 指定运行作业的虚拟机环境为最新版本的 Ubuntu

    steps:  # 定义作业中的步骤
      - uses: actions/checkout@v4  # 使用 checkout 动作来检出仓库的代码
      #- uses: pnpm/action-setup@v2  # 使用 pnpm 动作来设置 pnpm 环境
        with:  # 配置 pnpm 动作
          version: 9  # 指定 pnpm 的版本为 9
      - uses: actions/setup-node@v4  # 使用 setup-node 动作来设置 Node.js 环境
        with:  # 配置 setup-node 动作
          node-version: 20  # 指定 Node.js 的版本为 20
          cache: npm  # 启用 pnpm 缓存
      - run: npm ci --frozen-lockfile  # 运行命令来安装依赖，并锁定 package-lock 文件
      - name: Build  # 定义步骤的名称：构建
        run: BASE_PATH=/ npm run docs:build  # 运行命令来构建文档，设置基础路径为 /zui/3/
      - name: Deploy  # 定义步骤的名称：部署
        uses: peaceiris/actions-gh-pages@v3  #  手动创建一个分支试试   gh-pages 动作来部署到 GitHub Pages
        with:  # 配置 gh-pages 动作
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的令牌来授权操作
          publish_dir: docs/_/.vitepress/dist  # 指定要发布的目录
          destination_dir: '.' # 设置为根目录
